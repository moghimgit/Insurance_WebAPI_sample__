// <auto-generated />
using Insurance_WebAPI_sample__.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insurance_WebAPI_sample__.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20250413184142_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Insurance_WebAPI_sample__.Model.Coverage", b =>
                {
                    b.Property<int>("CoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoverageId"));

                    b.Property<string>("CoverageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CoverageId");

                    b.ToTable("Coverages");

                    b.HasData(
                        new
                        {
                            CoverageId = 1,
                            CoverageName = "جراحی",
                            MaxInvestment = 500000000m,
                            MinInvestment = 5000m,
                            Rate = 0.0052m
                        },
                        new
                        {
                            CoverageId = 2,
                            CoverageName = "دندانپزشکی",
                            MaxInvestment = 400000000m,
                            MinInvestment = 4000m,
                            Rate = 0.0042m
                        },
                        new
                        {
                            CoverageId = 3,
                            CoverageName = "بستری",
                            MaxInvestment = 200000000m,
                            MinInvestment = 2000m,
                            Rate = 0.005m
                        });
                });

            modelBuilder.Entity("Insurance_WebAPI_sample__.Model.CoverageSelection", b =>
                {
                    b.Property<int>("CoverageSelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoverageSelectionId"));

                    b.Property<decimal>("CalculatedPremium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoverageId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceRequestId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CoverageSelectionId");

                    b.HasIndex("InsuranceRequestId");

                    b.ToTable("CoverageSelections");
                });

            modelBuilder.Entity("Insurance_WebAPI_sample__.Model.InsuranceRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPremium")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RequestId");

                    b.ToTable("InsuranceRequests");
                });

            modelBuilder.Entity("Insurance_WebAPI_sample__.Model.CoverageSelection", b =>
                {
                    b.HasOne("Insurance_WebAPI_sample__.Model.InsuranceRequest", null)
                        .WithMany("Coverages")
                        .HasForeignKey("InsuranceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Insurance_WebAPI_sample__.Model.InsuranceRequest", b =>
                {
                    b.Navigation("Coverages");
                });
#pragma warning restore 612, 618
        }
    }
}
